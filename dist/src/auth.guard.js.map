{"version":3,"file":"auth.guard.js","sourceRoot":"","sources":["../../src/auth.guard.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,2CAKwB;AACxB,kDAA0B;AAC1B,yDAAoD;AACpD,qCAAiE;AACjE,6EAAmE;AAG5D,IAAM,SAAS,GAAf,MAAM,SAAS;IACpB,KAAK,CAAC,WAAW,CAAC,OAAyB;QACzC,MAAM,OAAO,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,UAAU,EAAE,CAAC;QACpD,IAAI,CAAC;YACH,MAAM,MAAM,GAAG,uBAAiB;gBAC9B,CAAC,CAAC,uBAAuB;gBACzB,CAAC,CAAC,YAAM;oBACR,CAAC,CAAC,4DAA4D;oBAC9D,CAAC,CAAC,aAAO;wBACT,CAAC,CAAC,yDAAyD;wBAC3D,CAAC,CAAC,IAAI,CAAC;YAET,MAAM,QAAQ,GAAG,MAAM,eAAK,CAAC,GAAG,CAC9B,GAAG,MAAM,8BAA8B,EACvC;gBACE,OAAO,EAAE;oBACP,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE;oBACpC,aAAa,EAAE,OAAO,CAAC,OAAO,CAAC,aAAa,IAAI,EAAE;iBACnD;aACF,CACF,CAAC;YAEF,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC;YAC/B,OAAO,CAAC,IAAI,GAAG,IAAA,mCAAe,EAAC,kBAAI,EAAE,QAAQ,CAAC,CAAC;YAC/C,OAAO,IAAI,CAAC;QACd,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACX,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACjB,MAAM,IAAI,8BAAqB,EAAE,CAAC;QACpC,CAAC;IACH,CAAC;CACF,CAAA;AA9BY,8BAAS;oBAAT,SAAS;IADrB,IAAA,mBAAU,GAAE;GACA,SAAS,CA8BrB","sourcesContent":["import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from \"@nestjs/common\";\nimport axios from \"axios\";\nimport { plainToInstance } from \"class-transformer\";\nimport { isDebug, isDevelopmentMode, isProd } from \"./utils/env\";\nimport { User } from \"./db/clients/main/entities/user/user.entity\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  async canActivate(context: ExecutionContext): Promise<boolean> {\n    const request = context.switchToHttp().getRequest();\n    try {\n      const domain = isDevelopmentMode\n        ? \"http://localhost:4030\"\n        : isProd\n        ? \"http://dms-login-service.production.svc.cluster.local:4030\"\n        : isDebug\n        ? \"http://dms-login-service.develop.svc.cluster.local:4030\"\n        : \"--\";\n\n      const response = await axios.get(\n        `${domain}/api/v2/login/validate-token`,\n        {\n          headers: {\n            Cookie: request.headers.cookie ?? \"\",\n            Authorization: request.headers.authorization ?? \"\",\n          },\n        }\n      );\n\n      const userJson = response.data;\n      request.user = plainToInstance(User, userJson);\n      return true;\n    } catch (e) {\n      console.error(e);\n      throw new UnauthorizedException();\n    }\n  }\n}\n"]}