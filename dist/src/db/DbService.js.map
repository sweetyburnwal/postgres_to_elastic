{"version":3,"file":"DbService.js","sourceRoot":"","sources":["../../../src/db/DbService.ts"],"names":[],"mappings":";;;AAAA,qCAA0E;AAE1E,MAAsB,SAAS;IAC7B,KAAK,CAAC,UAAU;QACd,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,IAAI,CAAC;YACH,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;YACrC,IAAI,UAAU,CAAC,WAAW,EAAE,CAAC;gBAC3B,OAAO;YACT,CAAC;QACH,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;QAEb,CAAC;QACD,IAAI,CAAC;YACH,MAAM,IAAA,0BAAgB,EAAC,MAAM,CAAC,CAAC;YAC/B,OAAO,CAAC,GAAG,CACT,qCAAqC,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC,QAAQ,EAAE,CACvE,CAAC;QACJ,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACX,OAAO,CAAC,KAAK,CACX,iCAAiC,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC,QAAQ,EAAE,CACnE,CAAC;YACF,MAAM,4BAA4B,CAAC;QACrC,CAAC;IACH,CAAC;IAMM,KAAK;QACV,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC,KAAK,EAAE,CAAC;IACnC,CAAC;CACF;AA/BD,8BA+BC","sourcesContent":["import { Connection, ConnectionOptions, createConnection } from \"typeorm\";\n\nexport abstract class DbService {\n  async initialize(): Promise<void> {\n    const config = this.getConfig();\n    try {\n      const connection = this.connection();\n      if (connection.isConnected) {\n        return;\n      }\n    } catch (e) {\n      // console.error(e);\n    }\n    try {\n      await createConnection(config);\n      console.log(\n        `✅ Database connection successful: ${config.type}: ${config.database}`,\n      );\n    } catch (e) {\n      console.error(\n        `❌ Database connection failed: ${config.type}: ${config.database}`,\n      );\n      throw \"Database connection failed\";\n    }\n  }\n\n  public abstract getConfig(): ConnectionOptions;\n\n  public abstract connection(): Connection;\n\n  public close(): Promise<void> {\n    return this.connection().close();\n  }\n}\n"]}