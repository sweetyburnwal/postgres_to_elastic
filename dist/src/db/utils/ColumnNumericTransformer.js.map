{"version":3,"file":"ColumnNumericTransformer.js","sourceRoot":"","sources":["../../../../src/db/utils/ColumnNumericTransformer.ts"],"names":[],"mappings":";;;AAEA,MAAa,wBAAwB;IACnC,EAAE,CAAC,IAAoB;QACrB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC;YAC7B,OAAO,IAAI,CAAC;QACd,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,IAAI,CAAC,IAAoB;QACvB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC;YAC7B,MAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;YAC7B,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC;gBACf,OAAO,GAAG,CAAC;YACb,CAAC;iBAAM,CAAC;gBACN,OAAO,GAAG,CAAC;YACb,CAAC;QACH,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAnBD,4DAmBC;AAED,SAAS,iBAAiB,CAAI,GAAyB;IACrD,OAAO,OAAO,GAAG,KAAK,WAAW,IAAI,GAAG,KAAK,IAAI,CAAC;AACpD,CAAC","sourcesContent":["import { ValueTransformer } from \"typeorm\";\n\nexport class ColumnNumericTransformer implements ValueTransformer {\n  to(data?: number | null): number | null | undefined {\n    if (!isNullOrUndefined(data)) {\n      return data;\n    }\n    return data;\n  }\n\n  from(data?: string | null): number | null {\n    if (!isNullOrUndefined(data)) {\n      const res = parseFloat(data);\n      if (isNaN(res)) {\n        return NaN;\n      } else {\n        return res;\n      }\n    }\n    return null;\n  }\n}\n\nfunction isNullOrUndefined<T>(obj: T | null | undefined): obj is null | undefined {\n  return typeof obj === \"undefined\" || obj === null;\n}\n"]}