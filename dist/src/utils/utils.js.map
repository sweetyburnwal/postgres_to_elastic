{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/utils/utils.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,kCAMC;AAzBD,yBAAuB;AACvB,+BAAwC;AACxC,2CAA6B;AAG7B,MAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAE1B,MAAM,YAAY,GAAG,GAAG,EAAE;IAC/B,IAAI,aAAO,EAAE,CAAC;QACZ,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,cAAc,CAAC,EAAE,CAAC,CAAC;IACvE,CAAC;SAAM,IAAI,YAAM,EAAE,CAAC;QAClB,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,WAAW,CAAC,EAAE,CAAC,CAAC;IACpE,CAAC;SAAM,CAAC;QACN,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,cAAc,CAAC,EAAE,CAAC,CAAC;IAGvE,CAAC;AACH,CAAC,CAAC;AAVW,QAAA,YAAY,gBAUvB;AAEF,SAAgB,WAAW,CAAC,GAAW;IACrC,MAAM,KAAK,GAAW,OAAO,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;IACxC,IAAI,CAAC,KAAK,EAAE,CAAC;QACX,MAAM,IAAI,KAAK,CAAC,iCAAiC,GAAG,EAAE,CAAC,CAAC;IAC1D,CAAC;IACD,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import \"dotenv/config\";\nimport { isDebug, isProd } from \"./env\";\nimport * as path from \"path\";\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst dotenv = require(\"dotenv\");\n\nexport const setupEnvFile = () => {\n  if (isDebug) {\n    dotenv.config({ path: path.resolve(process.cwd(), \".env.develop\") });\n  } else if (isProd) {\n    dotenv.config({ path: path.resolve(process.cwd(), \".env.prod\") });\n  } else {\n    dotenv.config({ path: path.resolve(process.cwd(), \".env.develop\") });\n\n    // throw new Error(\"NODE_ENV not defined or found matching\");\n  }\n};\n\nexport function getEnvValue(key: string): string {\n  const value: string = process.env[key]!;\n  if (!value) {\n    throw new Error(`Env config error: missing env.${key}`);\n  }\n  return value;\n}\n"]}